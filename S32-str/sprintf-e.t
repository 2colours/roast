use v6;

#BEGIN %*ENV<PERL6_TEST_DIE_ON_FAIL> = True;
use Test;

# Test combinations of flags for "%e".  The @info array is intialized with
# the flags (as a string), the size/precision specification (either a
# string or a # number), and the expected strings for the values 0, 27.1 and
# -2.71.  The flags values will be expanded to all possible permutations to
# ensure that the order of the flags is irrelevant.  Each flag permutation is
# combined with the size/permutation value to create a proper format string.

my ($v0, $v4, $vm) =
                              0 ,           27.1 ,          -2.71 ;
my @info = ( # |----------------|----------------|----------------|
             # no size or size explicitely 0
       '',   '',  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
      ' ',   '', " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
      '0',   '',  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
     '0 ',   '', " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
      '+',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '+ ',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '+0',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '+0 ',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
      '-',   '',  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
     '-+',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '- ',   '', " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
    '-+ ',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '-0',   '',  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
    '-+0',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '-0 ',   '', " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
   '-+0 ',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
      '#',   '',  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
     '# ',   '', " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
     '#0',   '',  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
    '#0 ',   '', " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
     '#+',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#+ ',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#+0',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
   '#+0 ',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '#-',   '',  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
    '#-+',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#- ',   '', " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
   '#-+ ',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#-0',   '',  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
   '#-+0',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
   '#-0 ',   '', " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
  '#-+0 ',   '', "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",

             # no size, precision 0
       '', '.0',         "0e+00",         "3e+01",        "-3e+00",
      ' ', '.0',        " 0e+00",        " 3e+01",        "-3e+00",
      '0', '.0',         "0e+00",         "3e+01",        "-3e+00",
     '0 ', '.0',        " 0e+00",        " 3e+01",        "-3e+00",
      '+', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
     '+ ', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
     '+0', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
    '+0 ', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
      '-', '.0',         "0e+00",         "3e+01",        "-3e+00",
     '-+', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
     '- ', '.0',        " 0e+00",        " 3e+01",        "-3e+00",
    '-+ ', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
     '-0', '.0',         "0e+00",         "3e+01",        "-3e+00",
    '-+0', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
    '-0 ', '.0',        " 0e+00",        " 3e+01",        "-3e+00",
   '-+0 ', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
      '#', '.0',         "0e+00",         "3e+01",        "-3e+00",
     '# ', '.0',        " 0e+00",        " 3e+01",        "-3e+00",
     '#0', '.0',         "0e+00",         "3e+01",        "-3e+00",
    '#0 ', '.0',        " 0e+00",        " 3e+01",        "-3e+00",
     '#+', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
    '#+ ', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
    '#+0', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
   '#+0 ', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
     '#-', '.0',         "0e+00",         "3e+01",        "-3e+00",
    '#-+', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
    '#- ', '.0',        " 0e+00",        " 3e+01",        "-3e+00",
   '#-+ ', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
    '#-0', '.0',         "0e+00",         "3e+01",        "-3e+00",
   '#-+0', '.0',        "+0e+00",        "+3e+01",        "-3e+00",
   '#-0 ', '.0',        " 0e+00",        " 3e+01",        "-3e+00",
  '#-+0 ', '.0',        "+0e+00",        "+3e+01",        "-3e+00",

             # 2 positions, usually doesn't fit
       '',    2,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
      ' ',    2, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
      '0',    2,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
     '0 ',    2, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
      '+',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '+ ',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '+0',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '+0 ',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
      '-',    2,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
     '-+',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '- ',    2, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
    '-+ ',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '-0',    2,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
    '-0 ',    2, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
    '-+0',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
   '-+0 ',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
      '#',    2,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
     '# ',    2, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
     '#0',    2,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
    '#0 ',    2, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
     '#+',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#+ ',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#+0',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
   '#+0 ',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '#-',    2,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
    '#-+',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#- ',    2, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
   '#-+ ',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#-0',    2,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
   '#-0 ',    2, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
   '#-+0',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
  '#-+0 ',    2, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",

             # 8 positions, should always fit
       '',    8,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
      ' ',    8, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
      '0',    8,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
     '0 ',    8, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
      '+',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '+ ',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '+0',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '+0 ',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
      '-',    8,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
     '-+',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '- ',    8, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
    '-+ ',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '-0',    8,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
    '-0 ',    8, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
    '-+0',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
   '-+0 ',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
      '#',    8,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
     '# ',    8, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
     '#0',    8,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
    '#0 ',    8, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
     '#+',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#+ ',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#+0',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
   '#+0 ',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
     '#-',    8,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
    '#-+',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#- ',    8, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
   '#-+ ',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
    '#-0',    8,  "0.000000e+00",  "2.710000e+01", "-2.710000e+00",
   '#-0 ',    8, " 0.000000e+00", " 2.710000e+01", "-2.710000e+00",
   '#-+0',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",
  '#-+0 ',    8, "+0.000000e+00", "+2.710000e+01", "-2.710000e+00",

             # 8 positions with precision, precision fits sometimes
       '',  8.2,      "0.00e+00",      "2.71e+01",     "-2.71e+00",
      ' ',  8.2,     " 0.00e+00",     " 2.71e+01",     "-2.71e+00",
      '0',  8.2,      "0.00e+00",      "2.71e+01",     "-2.71e+00",
     '0 ',  8.2,     " 0.00e+00",     " 2.71e+01",     "-2.71e+00",
      '+',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
     '+ ',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
     '+0',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
    '+0 ',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
      '-',  8.2,      "0.00e+00",      "2.71e+01",     "-2.71e+00",
     '-+',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
     '- ',  8.2,     " 0.00e+00",     " 2.71e+01",     "-2.71e+00",
    '-+ ',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
     '-0',  8.2,      "0.00e+00",      "2.71e+01",     "-2.71e+00",
    '-+0',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
    '-0 ',  8.2,     " 0.00e+00",     " 2.71e+01",     "-2.71e+00",
   '-+0 ',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
      '#',  8.2,      "0.00e+00",      "2.71e+01",     "-2.71e+00",
     '# ',  8.2,     " 0.00e+00",     " 2.71e+01",     "-2.71e+00",
     '#0',  8.2,      "0.00e+00",      "2.71e+01",     "-2.71e+00",
    '#0 ',  8.2,     " 0.00e+00",     " 2.71e+01",     "-2.71e+00",
     '#+',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
    '#+ ',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
    '#+0',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
   '#+0 ',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
     '#-',  8.2,      "0.00e+00",      "2.71e+01",     "-2.71e+00",
    '#-+',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
    '#- ',  8.2,     " 0.00e+00",     " 2.71e+01",     "-2.71e+00",
   '#-+ ',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
    '#-0',  8.2,      "0.00e+00",      "2.71e+01",     "-2.71e+00",
   '#-+0',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",
   '#-0 ',  8.2,     " 0.00e+00",     " 2.71e+01",     "-2.71e+00",
  '#-+0 ',  8.2,     "+0.00e+00",     "+2.71e+01",     "-2.71e+00",

).map: -> $flags, $size, $r0, $r4, $rm {
    my @flat;
    @flat.append('%' ~ $_ ~ $size ~ 'e', $r0, $r4, $rm)
      for $flags.comb.permutations>>.join;
    |@flat
}

plan @info/4;

for @info -> $format, $r0, $r4, $rm {
    subtest {
        plan 3;

        is sprintf($format, $v0), $r0,
          "sprintf('$format',$v0) eq '$r0'";
        is sprintf($format, $v4), $r4,
          "sprintf('$format',$v4) eq '$r4'";
        is sprintf($format, $vm), $rm,
          "sprintf('$format',$vm) eq '$rm'";
    }, "Tested '$format'";
}

# vim: ft=perl6
